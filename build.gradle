group 'io.apisense.embed.influx'
version '1.3.0-SNAPSHOT'

apply from: 'nexusConfig.gradle'
ext.commonLicense = {
    name 'Apache License 2.0'
    url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
}

ext.devs = [
        {
            id 'aveuiller'
            name 'Antoine Veuiller'
            email 'aveuiller@gmail.com'
        }
]

apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // Logging
    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-log4j12:2.0.4'
    // InfluxDB configuration
    compile 'com.moandjiezana.toml:toml4j:0.7.2'
    // Extract archives
    compile 'org.codehaus.plexus:plexus-container-default:2.1.1'
    compile 'org.codehaus.plexus:plexus-archiver:4.6.0'
    // Web request
    compile 'com.squareup.okhttp3:okhttp:4.10.0'

    // Network Helper among others
    compile 'de.flapdoodle.embed:de.flapdoodle.embed.process:2.1.2'

    // Tests
    testCompile 'junit:junit:4.13.2'
    testCompile 'org.mockito:mockito-core:4.8.0'
    testCompile 'com.squareup.okhttp3:mockwebserver:4.10.0'

}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

check.dependsOn jacocoTestReport

sourceSets {
    integration {
        java.srcDir "$projectDir/src/it/java"
        resources.srcDir "$projectDir/src/it/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories.mavenDeployer {
        pom.project {
            name 'Embed InfluxDB'
            artifactId 'embed-influxDB'
            packaging 'jar'
            description 'Download and start influxDB servers at runtime.'
            url 'https://apisense.io'

            scm {
                connection 'scm:git:https://github.com/APISENSE/embed-influxDB.git'
                developerConnection 'scm:git:https://github.com/APISENSE/embed-influxDB'
                url 'https://github.com/APISENSE/embed-influxDB'
            }

            licenses {
                license commonLicense
            }
            developers {
                devs.collect({ developer it })
            }
        }
    }
}
